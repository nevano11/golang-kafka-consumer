{
    "swagger": "2.0",
    "info": {
        "description": "fio sender",
        "title": "Kafka producer",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/human": {
            "get": {
                "description": "method to select humans",
                "consumes": [
                    "application/json"
                ],
                "summary": "get humans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "surname",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lastname",
                        "name": "lastname",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "age",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "nationality",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageNum",
                        "name": "pageNum",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "method to edit human",
                "consumes": [
                    "application/json"
                ],
                "summary": "edit human",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "human id",
                        "name": "humanId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The input todo struct",
                        "name": "human",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Human"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "method to create human",
                "consumes": [
                    "application/json"
                ],
                "summary": "create human",
                "parameters": [
                    {
                        "description": "The input todo struct",
                        "name": "human",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Human"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "method to delete human",
                "consumes": [
                    "application/json"
                ],
                "summary": "delete human",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "human id",
                        "name": "humanId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Human": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}